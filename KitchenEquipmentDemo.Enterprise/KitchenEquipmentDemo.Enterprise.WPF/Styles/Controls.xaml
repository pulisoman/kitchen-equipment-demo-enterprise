<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- Base spacing -->
    <Thickness x:Key="App.Input.Padding">8,6</Thickness>
    <sys:Double x:Key="App.Input.Height">40</sys:Double>

    <!-- TextBox -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="{StaticResource App.Input.Height}"/>
        <Setter Property="Padding" Value="{StaticResource App.Input.Padding}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- PasswordBox -->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="{StaticResource App.Input.Height}"/>
        <Setter Property="Padding" Value="{StaticResource App.Input.Padding}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>


        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="{StaticResource App.Input.Height}"/>
            <Setter Property="Padding" Value="6,2"/>
            <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsEditable" Value="False"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Content area -->
                                <ContentPresenter x:Name="ContentSite"
                                              Grid.Column="0"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                                <!-- Editable text box (hidden by default) -->
                                <TextBox x:Name="PART_EditableTextBox"
                                     Grid.Column="0"
                                     Style="{x:Null}"
                                     Margin="{TemplateBinding Padding}"
                                     Focusable="True"
                                     Background="Transparent"
                                     Foreground="{TemplateBinding Foreground}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>

                                <!-- Full-size ToggleButton covering the entire ComboBox -->
                                <ToggleButton x:Name="ToggleButton" 
                                          Grid.ColumnSpan="2"
                                          Focusable="false"
                                          Background="Transparent"
                                          BorderBrush="Transparent"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border x:Name="toggleBorder"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                BorderThickness="0"
                                                SnapsToDevicePixels="True">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="30"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Path x:Name="Arrow"
                                                      Grid.Column="1"
                                                      Fill="{TemplateBinding Foreground}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M0,0 L4,4 8,0 Z"/>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <!-- Dropdown popup -->
                                <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                    <Border x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{StaticResource Brush.Accent}"
                                        BorderThickness="1"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <ScrollViewer>
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource Brush.Deep}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="True">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button (base) -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="TestButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Content" Value="TEST BUTTON"/>
    </Style>

    <!-- Accent button with hover/pressed states; force white text even for nested TextBlocks -->
    <Style x:Key="BtnAccent" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.White}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="True">
                        <TextBlock x:Name="contentText"
                               Text="{TemplateBinding Content}"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               Foreground="{TemplateBinding Foreground}"
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentText" Property="Foreground" Value="#99FFFFFF"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.85"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BtnPrimary" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.White}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="True">
                        <TextBlock x:Name="contentText"
                               Text="{TemplateBinding Content}"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               Foreground="{TemplateBinding Foreground}"
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentText" Property="Foreground" Value="#99FFFFFF"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.85"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BtnDanger" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.White}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="True">
                        <TextBlock x:Name="contentText"
                               Text="{TemplateBinding Content}"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               Foreground="{TemplateBinding Foreground}"
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentText" Property="Foreground" Value="#99FFFFFF"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.85"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="0,6,0,0"/>
        <Setter Property="Background" Value="{StaticResource Brush.White}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="16,10,12,10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                     Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     CornerRadius="0"
                     SnapsToDevicePixels="True">
                        <TextBlock x:Name="contentText"
                            Text="{TemplateBinding Content}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            Foreground="{TemplateBinding Foreground}"
                            TextWrapping="NoWrap"
                            TextTrimming="CharacterEllipsis"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentText" Property="Foreground" Value="#99FFFFFF"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.85"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavButtonSelected" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="0,6,0,0"/>
        <Setter Property="Background" Value="{StaticResource Brush.Deep}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.White}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Deep}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="16,10,12,10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                 Background="{TemplateBinding Background}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 BorderThickness="{TemplateBinding BorderThickness}"
                 CornerRadius="0"
                 SnapsToDevicePixels="True">
                        <TextBlock x:Name="contentText"
                        Text="{TemplateBinding Content}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="{TemplateBinding Padding}"
                        Foreground="{TemplateBinding Foreground}"
                        TextWrapping="NoWrap"
                        TextTrimming="CharacterEllipsis"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Brush.Deep}"/>
                            <Setter TargetName="contentText" Property="Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentText" Property="Foreground" Value="#99FFFFFF"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.85"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   

    <!-- DataGrid minimal uniform look -->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="RowHeight" Value="36"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="8,6"/>
    </Style>

    <!-- Tiles / Cards -->
    <Style x:Key="TileButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource Brush.White}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="Width" Value="240"/>
        <Setter Property="Height" Value="140"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="10"
                SnapsToDevicePixels="True"
                TextElement.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Accent}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.White}"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Brush.Deep}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.White}"/>
                            <Setter Property="TextElement.Foreground" Value="{StaticResource Brush.White}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tile text pieces -->
    <Style x:Key="TileIcon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="Opacity" Value="0.9"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="TileTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,8,0,0"/>
    </Style>

    <Style x:Key="TileSubtitle" TargetType="TextBlock">
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Margin" Value="0,2,0,0"/>

        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>
