// <auto-generated>

using System;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
using System.Data.Entity.Spatial;
using KitchenEquipmentDemo.Enterprise.Data.Models;

namespace KitchenEquipmentDemo.Enterprise.Data.Mappings
{
    // user
    public class UserConfiguration : EntityTypeConfiguration<User>
    {
        public UserConfiguration()
            : this("dbo")
        {
        }

        public UserConfiguration(string schema)
        {
            ToTable("user", schema);
            HasKey(x => x.UserId);

            Property(x => x.UserId).HasColumnName(@"user_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.UserType).HasColumnName(@"user_type").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.FirstName).HasColumnName(@"first_name").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.LastName).HasColumnName(@"last_name").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.EmailAddress).HasColumnName(@"email_address").HasColumnType("nvarchar").IsOptional().HasMaxLength(256);
            Property(x => x.UserName).HasColumnName(@"user_name").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.PasswordHash).HasColumnName(@"password_hash").HasColumnType("varbinary").IsRequired().HasMaxLength(64);
            Property(x => x.PasswordSalt).HasColumnName(@"password_salt").HasColumnType("varbinary").IsRequired().HasMaxLength(16);
            Property(x => x.PasswordAlgo).HasColumnName(@"password_algo").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.PasswordVersion).HasColumnName(@"password_version").HasColumnType("tinyint").IsOptional();
            Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType("datetime2").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"created_by").HasColumnType("int").IsOptional();
            Property(x => x.UpdatedAt).HasColumnName(@"updated_at").HasColumnType("datetime2").IsOptional();
            Property(x => x.UpdatedBy).HasColumnName(@"updated_by").HasColumnType("int").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"is_deleted").HasColumnType("bit").IsRequired();
            Property(x => x.RowVersion).HasColumnName(@"row_version").HasColumnType("timestamp").IsRequired().IsFixedLength().HasMaxLength(8).IsRowVersion().IsConcurrencyToken();
        }
    }

}
// </auto-generated>
