// <auto-generated>

using System;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
using System.Data.Entity.Spatial;
using KitchenEquipmentDemo.Enterprise.Data.Models;

namespace KitchenEquipmentDemo.Enterprise.Data.Mappings
{
    // ****************************************************************************************************
    // This is not a commercial licence, therefore only a few tables/views/stored procedures are generated.
    // ****************************************************************************************************

    // equipment
    public class EquipmentConfiguration : EntityTypeConfiguration<Equipment>
    {
        public EquipmentConfiguration()
            : this("dbo")
        {
        }

        public EquipmentConfiguration(string schema)
        {
            ToTable("equipment", schema);
            HasKey(x => x.EquipmentId);

            Property(x => x.EquipmentId).HasColumnName(@"equipment_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.SerialNumber).HasColumnName(@"serial_number").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.Name).HasColumnName(@"name").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.Description).HasColumnName(@"description").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.Condition).HasColumnName(@"condition").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.UserId).HasColumnName(@"user_id").HasColumnType("int").IsOptional();
            Property(x => x.SiteId).HasColumnName(@"site_id").HasColumnType("int").IsOptional();
            Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType("datetime2").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"created_by").HasColumnType("int").IsOptional();
            Property(x => x.UpdatedAt).HasColumnName(@"updated_at").HasColumnType("datetime2").IsOptional();
            Property(x => x.UpdatedBy).HasColumnName(@"updated_by").HasColumnType("int").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"is_deleted").HasColumnType("bit").IsRequired();
            Property(x => x.RowVersion).HasColumnName(@"row_version").HasColumnType("timestamp").IsRequired().IsFixedLength().HasMaxLength(8).IsRowVersion().IsConcurrencyToken();

            // Foreign keys
            HasOptional(a => a.Site).WithMany(b => b.Equipment).HasForeignKey(c => c.SiteId).WillCascadeOnDelete(false); // FK_equipment_site
            HasOptional(a => a.User).WithMany(b => b.Equipment).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_equipment_user
        }
    }

}
// </auto-generated>
